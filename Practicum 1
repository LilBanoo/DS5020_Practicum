..
---
title: "R Notebook"
output: html_notebook
---

# Practicum 1

### Load data

load data from link: <https://data.ny.gov/api/views/ngbt-9rwf/rows.xml>

Since the file has nested \<row\>\</row\> tags:

```{xml}
<row>
  <row>
  </row>
  ...
  ...
  <row>
  </row>
</row>
```

the getNodeSet will also catch the outer \<row\> which include all the rows inside as a single node, here, we drop the first node

```{r}
options(max.print=30)
library(tidyverse)
library(XML)
library(RCurl)
library(knitr)
library(cowplot)
parsed_admission = getURL('https://data.ny.gov/api/views/ngbt-9rwf/rows.xml') %>%
  xmlParse()

df_admission = xmlToDataFrame(nodes=getNodeSet(parsed_admission, '//row')[-1]) %>% as_tibble()
```

## Data Exploration

### Inspect

```{r}
glimpse(df_admission)
```

## Check Distribution

since no NA or invalid values are found. Data cleaning won't be performed until certain analysis.

1.  convert admissions variable from string to integer

```{r}
# NA data
df_admission %>%
  is.na() %>%
  apply(2, FUN=sum) %>%
  kable()

# 
df_admission = df_admission %>%
  mutate(admissions=as.integer(admissions))

# validate vars

for (col in colnames(df_admission)[-length(df_admission)]){
  dist = df_admission[col] %>%
    group_by(.data[[col]]) %>%
    summarise(n=n()) %>%
    ggplot(aes(x=.data[[col]], .data[["n"]])) + geom_col()
  show(dist)
  ggsave(filename=paste(col, '.png'), plot=dist)
}

```

```{r}
df_admission %>%
  select(admissions) %>%
  ggplot(aes(admissions)) + geom_density()
ggsave('admission.png')
```
```{r}
# function to find the outliers which are more than 2 sd from the mean
boxplot(df_admission$admissions)

outliers <- function(x){
  return (x > mean(x) +3*sd(x) | x< mean(x) - 3*sd(x))
}

# df_admission <- df_admission[!outliers(df_admission[['admisions']])]

```

# Creating Relational tibbles

### Read and parse the data from county_id.txt

```{r}

county = tribble(
  ~county_code, ~county_name,
  "AL",   "ALbany",
  "CA",   "CAttaraugus",
  "CN",   "CheNango",
  "DE",   "DElaware",
  "FR",   "FRanklin",
  "HA",   "HAmilton",
  "LE",   "LEwis",
  "MG",   "MontGomery",
  "ON",   "ONeida",
  "OL",   "OrLeans",
  "NY",   "Queens",
  "SL",   "St.Lawrence",
  "SY",   "SchuYler",
  "SV",   "SulliVan",
  "WR",   "WaRren",
  "WY",   "WYoming",
  "AG",   "AlleGany",
  "CY",   "CaYuga",
  "CL",   "CLinton",
  "DU",   "DUtchess",
  "FU",   "FUlton",
  "HE",   "HErkimer",
  "LI",   "LIvingston",
  "NA",   "NAssau",
  "OD",   "OnonDaga",
  "OS",   "OSwego",
  "RE",   "REnsselaer",
  "SA",   "SAratoga",
  "SE",   "SEneca",
  "TI",   "TIoga",
  "WS",   "WaShington",
  "YA",   "YAtes",
  "NY",   "Bronx",
  "CH",   "CHautauqua",
  "CO",   "COlumbia",
  "ER",   "ERie",
  "GE",   "GEnesee",
  "JE",   "JEfferson",
  "MA",   "MAdison",
  "NY",   "New York (City)",
  "OT",   "OnTario",
  "OG",   "OtseGo",
  "NY",   "Richmond",
  "SC",   "SChenectady",
  "ST",   "STeuben",
  "TO",   "TOmpkins",
  "WA",   "WAyne",
  "BM",   "BrooMe",
  "CM",   "CheMung",
  "CR",   "CoRtland",
  "ES",   "ESsex",
  "GR",   "GReene",
  "NY",   "Kings",
  "MO",   "MOnroe",
  "NI",   "NIagara",
  "OR",   "ORange",
  "PU",   "PUtnam",
  "RO",   "ROckland",
  "SH",   "SchoHarie",
  "SU",   "SUffolk",
  "UL",   "ULster",
  "WE",   "WEstchester"
)
county %>%
  count(county_code) %>%
  filter(n>1)
```


```{r }
program_category <- tribble(
  ~program_code, ~program_category,
  "CR", "Crisis",
  "IN", "Inpatient",
  "OTP", "Opioid Treatment",
  "OP",  "Outpatient",
  "RE", "Residential",
  "SP", "Specialized"
)
program_category
```
```{r}
primary_substance_group <- tribble(
  ~substance_code, ~primary_substance_group,
  "A", "Alcohol",
  "O", "All Others",
  "C", "Cocaine incl Crack",
  "H", "Heroin",
  "M", "Marijuana incl Hashish",
  "N", "None",
  "OO", "Other Opioids "
)
primary_substance_group
```
```{r}
admissions_data <- df_admission %>%
  select( -program_category) %>%
  left_join(primary_substance_group, by = "substance_code")
head(admissions_data)
```
```{r Q4}
# Question 4
  annualAdmissions <- function(admissions_data){
  admissions_data_NY <- filter(admissions_data, county_code %in% c("NY", "NYQ", "NYB", "NYK", "NYR"))
  by_year <- group_by(admissions_data_NY, year) 
  adm_per_year <- summarize(by_year, sum = sum(admissions))
  return (adm_per_year)
  }
annualAdmissions_NY <- annualAdmissions(admissions_data)
ggplot(annualAdmissions_NY, aes(year, sum, group = 1))+
  geom_point()+
  geom_line()+
  geom_segment(aes(x = '2009', y = 0, xend = '2009', yend = 141245),linetype="dashed", color = "red")+
  labs(x = "Year", y = "Tottal_Admissions", title = "Total number of admissions in New York state over years")

## year 2009 has the maximum admissions(141245). after 2009, the number of admissions decrease year by year. 
```
